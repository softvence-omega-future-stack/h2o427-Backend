# Generated by Django 5.2.7 on 2025-10-19 06:45

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('requests', '0002_report_notes_request_email_request_phone_number_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminDashboardSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notifications_enabled', models.BooleanField(default=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('auto_assign_requests', models.BooleanField(default=False)),
                ('default_status_filter', models.CharField(choices=[('all', 'All Requests'), ('pending', 'Pending Only'), ('in_progress', 'In Progress Only'), ('completed', 'Completed Only')], default='all', max_length=20)),
                ('requests_per_page', models.IntegerField(default=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin_user', models.OneToOneField(limit_choices_to={'is_staff': True}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Admin Dashboard Setting',
                'verbose_name_plural': 'Admin Dashboard Settings',
            },
        ),
        migrations.CreateModel(
            name='AdminNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('is_internal', models.BooleanField(default=True, help_text='Internal notes are not visible to clients')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin_user', models.ForeignKey(limit_choices_to={'is_staff': True}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_notes', to='requests.request')),
            ],
            options={
                'verbose_name': 'Admin Note',
                'verbose_name_plural': 'Admin Notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RequestActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('status_change', 'Status Changed'), ('comment_added', 'Comment Added'), ('report_uploaded', 'Report Uploaded'), ('request_assigned', 'Request Assigned'), ('request_created', 'Request Created'), ('report_downloaded', 'Report Downloaded')], max_length=20)),
                ('description', models.TextField()),
                ('old_value', models.CharField(blank=True, max_length=255, null=True)),
                ('new_value', models.CharField(blank=True, max_length=255, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('admin_user', models.ForeignKey(limit_choices_to={'is_staff': True}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='requests.request')),
            ],
            options={
                'verbose_name': 'Request Activity',
                'verbose_name_plural': 'Request Activities',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='RequestAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('notes', models.TextField(blank=True)),
                ('assigned_by', models.ForeignKey(limit_choices_to={'is_staff': True}, on_delete=django.db.models.deletion.CASCADE, related_name='assignments_made', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(limit_choices_to={'is_staff': True}, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_requests', to=settings.AUTH_USER_MODEL)),
                ('request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='assignment', to='requests.request')),
            ],
            options={
                'verbose_name': 'Request Assignment',
                'verbose_name_plural': 'Request Assignments',
            },
        ),
    ]
